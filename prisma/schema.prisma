// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model category {
  id Int @id @default(autoincrement())
  name String
  slug String?
  image_url String?
  foods food[]
}

model food {
  id Int @id @default(autoincrement())
  name String
  ingredients String?
  price Decimal
  categoryId Int?
  category category? @relation(references: [id],fields: [categoryId])
  order_details orderDetail[]
}

model user {
  id Int @id @default(autoincrement())
  firstname String
  lastname String
  email String @unique
  verified Boolean @default(false)
  activationToken String?
  resetToken String?
  passwordHash String
  role String @default("customer")
  orders order[]
}

model setting {
  id Int @id @default(autoincrement())
  name String @unique
  value String
}
model orderState {
  id Int @id @default(autoincrement())
  name String 
  cssBadgeClass String?
  orders order[]
}

model order {
  id Int @id @default(autoincrement())
  order_state_id Int 
  order_state orderState @relation(fields: [order_state_id],references: [id])
  user_id Int 
  user user @relation(fields: [user_id],references: [id])
  is_paid Boolean @default(false)
  shipping_required Boolean @default(false)
  shipping_costs Decimal @default(0.00)
  notes String?
  details orderDetail[]
}

model orderDetail {
  id Int @id @default(autoincrement())
  order_id Int
  order order @relation(fields: [order_id],references: [id],onDelete: Cascade)
  food_id Int?
  food food? @relation(fields: [food_id],references: [id],onDelete: SetNull)
  quantity Int
  unit_price Decimal
  name String
}